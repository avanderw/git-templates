#!/usr/bin/env bash
START_TIME=$(date +%s)

RESET=$(printf '\033[0m')
GREEN=$(printf '\033[0;32m')

SCRIPT_PATH="$0"
while [ -h "$SCRIPT_PATH" ]; do SCRIPT_PATH=$(readlink "$SCRIPT_PATH"); done
SCRIPT_PATH="$(dirname "$SCRIPT_PATH")"

SUMMARY=$(head <"$1" -1)
sed -E 's/(\S| )+\f\f?//'
echo "If applied this commit will"
echo "$GREEN  $SUMMARY$RESET"
echo

BODY=$(tr '\n' '\f' <"$1" | sed -E 's/(\S| )+\f\f?//' | tr '\f' '\n')
BODY=$(echo "$BODY" | sed -E 's/#.*//')
PARA=$(tr '\n' '\f' <"$1" | sed -E 's/(\S| )+\f\f?((\S| )+)\f.*/\2/g')
if [ -n "$BODY" ]; then
  echo "The problem is that"
  echo "$GREEN  $PARA$RESET"
  echo
fi

WARNINGS=0
echo "Reviewing commit message (commit-msg)"
echo "  (bypass with '--no-verify')"
SCRIPTS="check-first-word.sh check-length.sh check-period.sh"
for script in $SCRIPTS; do
  # shellcheck source=scripts/pre-commit/summary
  if ! . "$SCRIPT_PATH/scripts/commit-msg/summary/$script"; then
    WARNINGS=$((WARNINGS+1))
  fi
done

if [ -n "$BODY" ]; then
  SCRIPTS="check-wrap.sh"
  for script in $SCRIPTS; do
    # shellcheck source=scripts/commit-msg/body
    if ! . "$SCRIPT_PATH/scripts/commit-msg/body/$script"; then
      WARNINGS=$((WARNINGS+1))
    fi
  done
else
  echo "$GREEN  âœ“ No body$RESET"
fi

REPLY="y"
if [ $WARNINGS -gt 0 ]; then
  exec </dev/tty # assigns standard input to the keyboard
  printf "%s warnings, continue (y/n)? " $WARNINGS
  read -n 1 -r
  echo
fi

END_TIME=$(date +%s)
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "Time taken: $((END_TIME - START_TIME))s"
  echo
  exit 0
else
  echo "Commit denied: $((END_TIME - START_TIME))s"
  echo
  exit 1
fi
