[alias]									# Create branch with prefix feature
	amend   = !git add -A && git commit --amend --no-edit 									# Amend previous commit without editing message
	ls      = "log --pretty=format:\"%C(auto)%ad %h%d %s %C(cyan)[%an]%C(reset)\" --graph --date=short"
	sync = !git fetch --all && git rebase $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
	up      = !git pull --rebase --prune $@ && git submodule update --init --recursive		# Pull changes from the remote. Rebase any local commits to come after the commits I pulled down. Remove remote-tracking branches that no longer exist on the remote.
	undo    = reset HEAD~1 --mixed 															# Reset the previous commit, but keep all the changes from that commit in the working directory
	alias   = "!git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /" # List aliases
	authors = "!git shortlog -esn --no-merges"
	stats   = "!f() { git log --author=\"$1\" --shortstat --no-merges | grep -E 'fil(e|es) changed' | awk '{files+=$1; inserted+=$4; deleted+=$6; delta+=$4-$6} END {printf \"Commit stats:\\n- Files changed (total)..  %s\\n- Lines added (total)....  %s\\n- Lines deleted (total)..  %s\\n- Total lines (delta)....  %s\\n- Add./Del. ratio (1:n)..  1 : %s\\n\", files, inserted, deleted, delta, deleted / inserted }'; }; f"
